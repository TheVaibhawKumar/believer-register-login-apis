openapi: 3.0.0
info:
  title: Believer Auth APIs
  version: 1.0.0
  description: >
    This API provides secure user registration and login endpoints.
    Passwords are hashed using bcrypt, JWT tokens are issued for authentication,
    and request validation is enforced for security.

servers:
  - url: http://localhost:4000
    description: Local development server

tags:
  - name: Auth
    description: Endpoints for user authentication (register & login)

paths:
  /api/auth/register:
    post:
      tags: [Auth]
      summary: Register a new user
      description: Create a new account by providing name, email, phone (optional), and password.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: johndoe@example.com
                phone:
                  type: string
                  example: "+91-9876543210"
                password:
                  type: string
                  format: password
                  example: StrongPass@123
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: johndoe@example.com
                phone:
                  type: string
                  example: "+91-9876543210"
                password:
                  type: string
                  format: password
                  example: StrongPass@123
      responses:
        '201':
          description: User registered successfully
        '409':
          description: Email already registered
        '422':
          description: Validation failed

  /api/auth/login:
    post:
      tags: [Auth]
      summary: Login an existing user
      description: Authenticate user using email and password. Returns JWT token on success.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: johndoe@example.com
                password:
                  type: string
                  format: password
                  example: StrongPass@123
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: johndoe@example.com
                password:
                  type: string
                  format: password
                  example: StrongPass@123
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials
        '422':
          description: Validation failed
